---
layout: post
title: Vuex
date: 2020-05-13
description: Vue의 상태관리 저장소인 Vuex에 대해서 알아보자
---

> 💡 Vuex는 Vue.js에서 사용하는 상태 관리 저장소 라이브러리입니다.
모든 Vue Component에서 접근 가능한 이 상태 관리 저장소는 모든 데이터의 흐름을 중앙에서 관리할 수 있다는 편리함을 제공하는데요, 오늘은 이 Vuex의 흐름과 규칙에 대해서 정리해보도록 하겠습니다.

<br />

### Vuex의 기본 흐름
Vuex를 검색하면 가장 먼저 나오는 이 흐름도를 많이 접하셨을 것같아요.
그런데 저는 처음에 이 그림이 도통 이해가 안가더라구요..😅
제가 이해한 내용을 바탕으로 최대한 이해하기 쉽게 설명드리겠습니다!
<div class="img_row">
	<img class="col three" src="{{ site.baseurl }}/img/Vuex.png">
</div>

일단 크게 이 3가지만 알고 계시면 됩니다!
<ul>
  <li>State(상태)</li>
  <li>Mutation(변이)</li>
  <li>Actions(액션)</li>
</ul>

<br />
#### State(상태)
각각의 Component에서 필요한 데이터를 꺼내다 쓸 수 있어야겠죠?
그런데 우리 개발해보면 느끼셨을지 모르겠지만, 원본데이터를 유지하는게 중요하잖아요. 그 원본 데이터가 바로 State입니다!

```javascript
const store = new Vuex.Store({
  state: {
    count: 0;
  }
});
```

<br />
<span style="color: #333; font-weight: bold;">우리 그러면 State를 Component로 가져다가 사용하는 법</span>도 알아야겠죠?
아주 간단합니당! computed에서 가져다가 사용하면 됩니다.
형식은 <code style="color: #FF3636;">this.$store.state.stateName</code> 다음처럼 작성해주시면 됩니다!
그러면 State 값에 변화가 있을 때마다 computed에서 자동으로 계산이 되어서 변경된 값으로 화면에 출력이 될 것입니다. 너무 좋죠?

```javascript
export default {
  computed: {
    count() {
      return this.$store.state.count;
    }
  }
}
```
