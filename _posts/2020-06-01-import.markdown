---
layout: post
title: 아임 포트 (I'm port;)
date: 2020-06-01 14:36:00
description: App I'mPort
---

Online Payment 기능을 개발하는 결제 API 서비스
[https://www.iamport.kr/getstarted](https://www.iamport.kr/getstarted)

# 등장배경
**불편한 국내 온라인 결제 환경**
판매자와 PG사 사이의 결제연동을 할 때 그 결제를 구현하는 개발자 또한 온라인 결제 연동 개발 작업에 극심한 스트레스를 받았다.
- ActiveX 기반 인증 환경에서 결제 모듈 연동 개발은 매우 복잡하다
- PG사가 지원하지 않는 기술 환경에서 결제 연동은 고난의 시작이다
  - PG사는 Java, PHP, ASP에 대해서만 공식 지원
  - 스타트업이 선호하는 Python, Node.js와 같은 기술 환경에서는 결제 구현이 번거로움
- PC / Mobile 등 환경에 따라 연동 작업을 여러 번 진행
- 결제와 관련 없는 복잡한 파라미터를 모두 생성하고 입력해야 한다.
- ECU-KR 인코딩 변환 문제


# 결제 프로세스 상 아임포트 역할
Dirty Process를 대신 수행하고, 개발자는 아임포트가 제공하는 표준화된 API로 간편히 연동 한다.


# 아임포트 서비스 특징 - PG 서비스와 인터페이스를 쉽고 부드럽게 한다.
1. 표준화된 JavaScript & REST API
    - JavaScript API만 호출하면 PG 결제 창 연동까지 한번에 해결되고 결제에 필요한 파라미터 입력만으로 개발 완료
    - 결제 정보 조회, 결제취소, 매출전표 확인 URL 자동생성, 결제정보 위조 사전방지 등 결제 관리를 위한 풍부한 REST API 제공
2. 개발 환경에 중립적
    - Java, PHP, ASP 뿐만 아니라 Python, Node.js, Ruby와 같은 개발환경에서도 표준화된 방식의 결제 개발 지원
3. One Source - Multi Use
    - PC / Mobile을 구분해 작업할 필요 없이 하나의 소스코드로 PC / Mobile / IN-APP 모두 지원
    - PG사를 변경할 때도 새로운 개발 없이 기존의 동일한 소스 코드 적용
4. 결제 관리와 Business Intelligence
    - 아임포트가 기본 제공하는 관리자 페이지로 결제 운영 및 모니터링 진행
    - 고객의 결제 맥락을 이해할 수 있는 통계 제공 및 결제 데이터 분석
5. 보안은 철저하고 안전하게
    - 결제 정보가 전달되는 JavaScript API, REST API 통신구간 모두 HTTPS 암호화로 SSL 적용
    - 아임포트는 카드사가 요구하는 결제 프로세스를 100% 준수

# 적용 방법
**아임포트 1줄 코드 추가면 설치 끝**

1. 아임포트가 제공하는 JavaScript 라이브러리를 결제가 필요한 웹 페이지에 삽입 (jQuery 기반)

  ```html
  <script type="text/javascript" src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
  <script type="text/javascript" src="https://service.iamport.kr/js/iamport.payment-1.1.5.js"></script>
  ```

2. 설치 후 결제 받을 정보 (가격 / 결제 수단 / 결제자 정보 등) 만 아임포트로 요청하면 결제 완료
3. 기존 PG사가 요청하는 복잡한 파라미터 대신 결제에 필요한 간결한 파라미터만 호출
   ```javascript
   <script>
   $("#check_module").click(function () {
   var IMP = window.IMP; // 생략가능
   IMP.init('가맹점식별코드를 넣어주세요');
   // 'iamport' 대신 부여받은 "가맹점 식별코드"를 사용
   // i'mport 관리자 페이지 -> 내정보 -> 가맹점식별코드
   IMP.request_pay({
   pg: 'inicis', // version 1.1.0부터 지원. -> 이것만 테스트에서 지원하는듯?
   /*
   'kakao':카카오페이,
   html5_inicis':이니시스(웹표준결제)
   'nice':나이스페이
   'jtnet':제이티넷
   'uplus':LG유플러스
   'danal':다날
   'payco':페이코
   'syrup':시럽페이
   'paypal':페이팔
   */
   pay_method: 'card',
   /*
   'samsung':삼성페이,
   'card':신용카드,
   'trans':실시간계좌이체,
   'vbank':가상계좌,
   'phone':휴대폰소액결제
   */
   merchant_uid: 'merchant_' + new Date().getTime(),
   /*
   merchant_uid에 경우
   https://docs.iamport.kr/implementation/payment
   위에 url에 따라가시면 넣을 수 있는 방법이 있습니다.
   참고하세요.
   */
   name: '주문명:결제테스트',
   //결제창에서 보여질 이름
   amount: 1000,
   //가격
   buyer_email: 'iamport@siot.do',
   buyer_name: '구매자이름',
   buyer_tel: '010-1234-5678',
   buyer_addr: '서울특별시 강남구 삼성동',
   buyer_postcode: '123-456',
   m_redirect_url: 'https://www.yourdomain.com/payments/complete'
   /*
   모바일 결제시,
   결제가 끝나고 랜딩되는 URL을 지정
   (카카오페이, 페이코, 다날의 경우는 필요없음. PC와 마찬가지로 callback함수로 결과가 떨어짐)
   */
   }, function (rsp) {
   console.log(rsp);
   if (rsp.success) {
   var msg = '결제가 완료되었습니다.';
   msg += '고유ID : ' + rsp.imp_uid;
   msg += '상점 거래ID : ' + rsp.merchant_uid;
   msg += '결제 금액 : ' + rsp.paid_amount;
   msg += '카드 승인번호 : ' + rsp.apply_num;
   } else {
   var msg = '결제에 실패하였습니다.';
   msg += '에러내용 : ' + rsp.error_msg;
   }
   alert(msg);
   });
   });
   </script>
   ```

# 추가내용
결제된 데이터는 API를 통해 가져올 수 있다.
관리자 페이지 상단에 REST API에 들어가면 상단 API 키와 API secret 키를 시스템 설정에 있는 키 값을 가져와 토큰을 임시 저장시키면 그 후 자기가 결제한 모든 데이터를 조회할 수 있다.
Payments를 누르고 하단에 status를 누르면 여러가지가 나오는데 요청하기 버튼을 누르고 위에 API 키를 정상적으로 입력해서 토큰을 저장했다면 정상적인 요청 값이 나온다.

이 내용을 Node.js에 넣으면

```javascript
var Iamport = require('iamport');
var iamport = new Iamport({
impKey: '자신의_API_키',
impSecret: '자신의_APIscret_키'
});
```

```javascript
app.get('/payments/status/all',(req,res)=>{
      iamport.payment.getByStatus({
        payment_status: 'paid'
      }).then(function(result){
          res.render('payments_list',{list:result.list});
      }).catch(function(error){
          console.log(error);
          red.send(error);
      })
});
```

### 참고문헌
[아임포트 결제 연동2](https://www.notion.so/2-3395b98f408c44219529a6364ce185c0)
