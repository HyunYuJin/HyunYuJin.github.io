---
layout: post
title: 비동기 처리와 콜백함수
date: 2020-06-23 21:10:00
description: 자바스크립트 공부
---

# Promise란?
자바스크립트 비동기 처리에 사용되는 객체

* 비동기처리란?
* 자바스크립트가 비동기 처리를 하는 이유는?
* 비동기 처리를 유연하게 하기 위한 콜백 함수
* 콜백 함수 지옥

# 비동기 처리란?
특정 코드의 연산이 끝날 때까지 코드의 실행을 멈추지 않고 다음 코드를 먼저 실행하는 자바스크립트의 특성

* 가장 흔한 사례: Ajax
* setTimeout()

이렇게 특정 로직의 실행이 끝날 때까지 기다려주지 않고 나머지 코드를 먼저 실행하는 것이 비동기 처리.

# 자바스크립트가 비동기 처리를 하는 이유?
화면에서 서버로 데이터를 요청했을 때 서버가 언제 그 요청에 대한 응답을 줄지 모르기 때문에 마냥 다른 코드를 실행 안하고 기다릴 수 없다.

**웹 어플리 케이션을 실행하는데 수십 분은 걸릴 것이다.**

# 비동기 처리를 유연하게 하기 위한 콜백 함수
콜백 함수로 비동기 처리 방식의 문제점을 해결할 수 있다.

```javascript
function getData(callbackFunc) {
	$.get('https://url', function(response) {
		callbackFunc(response) // 서버에서 받은 response를 callbackFunc() 함수에 넘겨준다.
	}
}

getData(function(tableData) {
	console.log(tableData) // $.get()의 response 값이 tableData에 전달된다.
});
```

이렇게 콜백 함수를 사용하면 특정 로직이 끝났을 때 원하는 동작을 실행시킬 수 있다.

# 콜백 함수 지옥
콜백 지옥은 비동기 처리 로직을 위해 콜백 함수를 연속해서 사용할 때 발생하는 문제다.
이러한 코드는 가독성도 떨어지고 로직을 변경하기도 어렵다.

**콜백 지옥을 해결하는 방법**
* Promise
* Asynce & Await
* 콜백 함수 분리

# 동기적 프로그래밍
코드가 작성된 순서에 따라 순차적으로 실행된다.

# 비동기적 프로그래밍
한줄 한줄 순서대로 실행되는 것이 아님

# 짜장면 배달을 예로 든 비동기
* 배달시 그릇 상태: 짜장면이 담김
* 식사 후 그릇 상태: 비워짐
* 이동시 그릇 상태: 비워짐

# 프로세스, 스레드
주문자가 식사를 하는 것은 배달부의 배달과는 다른 쓰레드에서 이뤄진다.
여러 프로세스, 스레드가 여럿이 돌고 있다. 즉 멀티태스킹이 되고 있는 것이다.
앞의 열차가 꾸물거리면 뒤의 열차가 움직일 수 없다.
비동기 방식은 필요에 따라서 다른 선로에 배치하여 실행시킨다.

```javascript
Function asyncBlackBeanTimer (seconds) {
	console.log(‘짜장면 배달됨’);

	setTimeout(function () { // 여기가 Callback Function
		console.log(‘식사 완료’);
	}, seconds * 1000);

	console.log(‘배달부 떠남’);
}

asyncBlackBeanTimer(1);
```

*** -> 다 먹으면 콜백해주세요! 해서 Callback Function이라고 부른다! ***


자바스크립트는 싱글 쓰레드라 하나의 쓰레드만 돌아가는데 어떻게 비동기 프로그램이 가능할까!
자바스크립트 엔진에는 자바스크립트를 돌리는 쓰레드, 즉 자바스크립트 특급 선로가 있다.
선로라하면 먼저 들어간게 먼저 나오는 큐 형태인데 함수는 나중에 들어간게 먼저 나오는 스택처리다.
